//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass Generator
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Generator.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Generator.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("998d169c-4479-4c51-afb7-ac84ad68d0a9")]
	public partial class Generator : CompositeTask
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Generator domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x998d169c, 0x4479, 0x4c51, 0xaf, 0xb7, 0xac, 0x84, 0xad, 0x68, 0xd0, 0xa9);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Generator(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Generator(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass Task
	/// Description for Ultramarine.Generators.Language.Task
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Task.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Task.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("eb42e64f-0ae3-4a9b-9435-7bc6dee5d967")]
	public abstract partial class Task : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Task domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xeb42e64f, 0x0ae3, 0x4a9b, 0x94, 0x35, 0x7b, 0xc6, 0xde, 0xe5, 0xd9, 0x67);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Task(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x8a36f86e, 0x184d, 0x4bbe, 0xb8, 0x6b, 0x5b, 0x8f, 0x2c, 0x5d, 0xe4, 0x93);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for Ultramarine.Generators.Language.Task.Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Task/Name.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Task/Name.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("8a36f86e-184d-4bbe-b86b-5b8f2c5de493")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Task.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Task, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Task.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Task.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Task element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Task element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Description domain property code
		
		/// <summary>
		/// Description domain property Id.
		/// </summary>
		public static readonly global::System.Guid DescriptionDomainPropertyId = new global::System.Guid(0x2bafcdc0, 0xca91, 0x45b0, 0xad, 0x72, 0x8c, 0xdd, 0x1d, 0xc8, 0xa3, 0x5b);
		
		/// <summary>
		/// Storage for Description
		/// </summary>
		private global::System.String descriptionPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Description domain property.
		/// Description for Ultramarine.Generators.Language.Task.Description
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Task/Description.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Task/Description.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2bafcdc0-ca91-45b0-ad72-8cdd1dc8a35b")]
		public global::System.String Description
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return descriptionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DescriptionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Task.Description domain property.
		/// </summary>
		internal sealed partial class DescriptionPropertyHandler : DslModeling::DomainPropertyValueHandler<Task, global::System.String>
		{
			private DescriptionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Task.Description domain property value handler.
			/// </summary>
			public static readonly DescriptionPropertyHandler Instance = new DescriptionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Task.Description domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return DescriptionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Task element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.descriptionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Task element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.descriptionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BaseType domain property code
		
		/// <summary>
		/// BaseType domain property Id.
		/// </summary>
		public static readonly global::System.Guid BaseTypeDomainPropertyId = new global::System.Guid(0xca067019, 0xe9aa, 0x45d0, 0xa3, 0x88, 0x27, 0xb1, 0xdf, 0xd9, 0x60, 0x16);
		
		/// <summary>
		/// Gets or sets the value of BaseType domain property.
		/// Description for Ultramarine.Generators.Language.Task.Base Type
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Task/BaseType.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Task/BaseType.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("ca067019-e9aa-45d0-a388-27b1dfd96016")]
		public global::System.String BaseType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return BaseTypePropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Task.BaseType domain property.
		/// </summary>
		internal sealed partial class BaseTypePropertyHandler : DslModeling::CalculatedPropertyValueHandler<Task, global::System.String>
		{
			private BaseTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Task.BaseType domain property value handler.
			/// </summary>
			public static readonly BaseTypePropertyHandler Instance = new BaseTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Task.BaseType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BaseTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Task element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for BaseType because its Kind is
				// set to Calculated. Please provide the GetBaseTypeValue()
				// method on the domain class.
				return element.GetBaseTypeValue();
			}
		
		}
		
		#endregion
		#region ConnectedWith opposite domain role accessor
		/// <summary>
		/// Gets or sets ConnectedWith.
		/// Description for Ultramarine.Generators.Language.Connection.ConnectedTask
		/// </summary>
		public virtual Task ConnectedWith
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Ultramarine.Generators.Language.Connection.ConnectedTaskDomainRoleId) as Task;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Ultramarine.Generators.Language.Connection.ConnectedTaskDomainRoleId, value);
			}
		}
		#endregion
		#region ConnectedTasked opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ConnectedTasked.
		/// Description for Ultramarine.Generators.Language.Connection.TargetTask
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Task> ConnectedTasked
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Task>, Task>(global::Ultramarine.Generators.Language.Connection.TargetTaskDomainRoleId);
			}
		}
		#endregion
		#region Parent opposite domain role accessor
		/// <summary>
		/// Gets or sets Parent.
		/// Description for Ultramarine.Generators.Language.Children.Task
		/// </summary>
		public virtual CompositeTask Parent
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::Ultramarine.Generators.Language.Children.TaskDomainRoleId) as CompositeTask;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::Ultramarine.Generators.Language.Children.TaskDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass CompositeTask
	/// Description for Ultramarine.Generators.Language.CompositeTask
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CompositeTask.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CompositeTask.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("44a54f0c-0084-44e3-b7b9-1e8f0f4ef3cc")]
	public abstract partial class CompositeTask : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CompositeTask domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x44a54f0c, 0x0084, 0x44e3, 0xb7, 0xb9, 0x1e, 0x8f, 0x0f, 0x4e, 0xf3, 0xcc);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected CompositeTask(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Tasks opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Tasks.
		/// Description for Ultramarine.Generators.Language.Children.CompositeTask
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Task> Tasks
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Task>, Task>(global::Ultramarine.Generators.Language.Children.CompositeTaskDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::Ultramarine.Generators.Language.Task.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::Ultramarine.Generators.Language.Task sourceTask1 = sourceElement as global::Ultramarine.Generators.Language.Task;
			if (sourceTask1 != null)
			{
				// Create link for path Children.Tasks
				this.Tasks.Add(sourceTask1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::Ultramarine.Generators.Language.Task sourceTask1 = sourceElement as global::Ultramarine.Generators.Language.Task;
			if (sourceTask1 != null)
			{
				// Delete link for path Children.Tasks
				
				foreach (DslModeling::ElementLink link in global::Ultramarine.Generators.Language.Children.GetLinks((global::Ultramarine.Generators.Language.CompositeTask)this, sourceTask1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::Ultramarine.Generators.Language.Children.CompositeTaskDomainRoleId, global::Ultramarine.Generators.Language.Children.TaskDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass LoadCodeElement
	/// Description for Ultramarine.Generators.Language.LoadCodeElement
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadCodeElement.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadCodeElement.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e88bb8c2-2e3e-4337-9b4a-ba0134771eb0")]
	public partial class LoadCodeElement : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// LoadCodeElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe88bb8c2, 0x2e3e, 0x4337, 0x9b, 0x4a, 0xba, 0x01, 0x34, 0x77, 0x1e, 0xb0);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public LoadCodeElement(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public LoadCodeElement(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ElementName domain property code
		
		/// <summary>
		/// ElementName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ElementNameDomainPropertyId = new global::System.Guid(0x3bbe6d15, 0x5211, 0x403e, 0x8c, 0xad, 0x4f, 0x06, 0x51, 0x40, 0xae, 0x21);
		
		/// <summary>
		/// Storage for ElementName
		/// </summary>
		private global::System.String elementNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ElementName domain property.
		/// Description for Ultramarine.Generators.Language.LoadCodeElement.Element Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadCodeElement/ElementName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.LoadCodeElement/ElementName.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadCodeElement/ElementName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3bbe6d15-5211-403e-8cad-4f065140ae21")]
		public global::System.String ElementName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return elementNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ElementNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadCodeElement.ElementName domain property.
		/// </summary>
		internal sealed partial class ElementNamePropertyHandler : DslModeling::DomainPropertyValueHandler<LoadCodeElement, global::System.String>
		{
			private ElementNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadCodeElement.ElementName domain property value handler.
			/// </summary>
			public static readonly ElementNamePropertyHandler Instance = new ElementNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadCodeElement.ElementName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ElementNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadCodeElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.elementNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadCodeElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.elementNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ElementType domain property code
		
		/// <summary>
		/// ElementType domain property Id.
		/// </summary>
		public static readonly global::System.Guid ElementTypeDomainPropertyId = new global::System.Guid(0x8427b3e8, 0x364c, 0x4296, 0xbf, 0xe7, 0x47, 0x56, 0x7c, 0x7b, 0x1e, 0xfd);
		
		/// <summary>
		/// Storage for ElementType
		/// </summary>
		private global::System.String elementTypePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ElementType domain property.
		/// Description for Ultramarine.Generators.Language.LoadCodeElement.Element Type
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadCodeElement/ElementType.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.LoadCodeElement/ElementType.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadCodeElement/ElementType.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8427b3e8-364c-4296-bfe7-47567c7b1efd")]
		public global::System.String ElementType
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return elementTypePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ElementTypePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadCodeElement.ElementType domain property.
		/// </summary>
		internal sealed partial class ElementTypePropertyHandler : DslModeling::DomainPropertyValueHandler<LoadCodeElement, global::System.String>
		{
			private ElementTypePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadCodeElement.ElementType domain property value handler.
			/// </summary>
			public static readonly ElementTypePropertyHandler Instance = new ElementTypePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadCodeElement.ElementType domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ElementTypeDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadCodeElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.elementTypePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadCodeElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.elementTypePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ElementAccess domain property code
		
		/// <summary>
		/// ElementAccess domain property Id.
		/// </summary>
		public static readonly global::System.Guid ElementAccessDomainPropertyId = new global::System.Guid(0xc743c13e, 0xf643, 0x464a, 0xa9, 0x43, 0xd6, 0x43, 0xa4, 0xbf, 0x04, 0x0a);
		
		/// <summary>
		/// Storage for ElementAccess
		/// </summary>
		private global::System.String elementAccessPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ElementAccess domain property.
		/// Description for Ultramarine.Generators.Language.LoadCodeElement.Element Access
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadCodeElement/ElementAccess.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.LoadCodeElement/ElementAccess.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadCodeElement/ElementAccess.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c743c13e-f643-464a-a943-d643a4bf040a")]
		public global::System.String ElementAccess
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return elementAccessPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ElementAccessPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadCodeElement.ElementAccess domain property.
		/// </summary>
		internal sealed partial class ElementAccessPropertyHandler : DslModeling::DomainPropertyValueHandler<LoadCodeElement, global::System.String>
		{
			private ElementAccessPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadCodeElement.ElementAccess domain property value handler.
			/// </summary>
			public static readonly ElementAccessPropertyHandler Instance = new ElementAccessPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadCodeElement.ElementAccess domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ElementAccessDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadCodeElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.elementAccessPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadCodeElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.elementAccessPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ElementOverride domain property code
		
		/// <summary>
		/// ElementOverride domain property Id.
		/// </summary>
		public static readonly global::System.Guid ElementOverrideDomainPropertyId = new global::System.Guid(0x84636b5c, 0x8348, 0x4063, 0xb1, 0xa8, 0x48, 0x51, 0x6c, 0xcc, 0xb7, 0x59);
		
		/// <summary>
		/// Storage for ElementOverride
		/// </summary>
		private global::System.String elementOverridePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ElementOverride domain property.
		/// Description for Ultramarine.Generators.Language.LoadCodeElement.Element Override
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadCodeElement/ElementOverride.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.LoadCodeElement/ElementOverride.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadCodeElement/ElementOverride.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("84636b5c-8348-4063-b1a8-48516cccb759")]
		public global::System.String ElementOverride
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return elementOverridePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ElementOverridePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadCodeElement.ElementOverride domain property.
		/// </summary>
		internal sealed partial class ElementOverridePropertyHandler : DslModeling::DomainPropertyValueHandler<LoadCodeElement, global::System.String>
		{
			private ElementOverridePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadCodeElement.ElementOverride domain property value handler.
			/// </summary>
			public static readonly ElementOverridePropertyHandler Instance = new ElementOverridePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadCodeElement.ElementOverride domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ElementOverrideDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadCodeElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.elementOverridePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadCodeElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.elementOverridePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TypeOf domain property code
		
		/// <summary>
		/// TypeOf domain property Id.
		/// </summary>
		public static readonly global::System.Guid TypeOfDomainPropertyId = new global::System.Guid(0xf8bd1678, 0x2988, 0x4bb2, 0xa5, 0xa9, 0x05, 0x12, 0x8f, 0xdf, 0x91, 0x88);
		
		/// <summary>
		/// Storage for TypeOf
		/// </summary>
		private global::System.String typeOfPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of TypeOf domain property.
		/// Description for Ultramarine.Generators.Language.LoadCodeElement.Type Of
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadCodeElement/TypeOf.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.LoadCodeElement/TypeOf.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadCodeElement/TypeOf.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f8bd1678-2988-4bb2-a5a9-05128fdf9188")]
		public global::System.String TypeOf
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return typeOfPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TypeOfPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadCodeElement.TypeOf domain property.
		/// </summary>
		internal sealed partial class TypeOfPropertyHandler : DslModeling::DomainPropertyValueHandler<LoadCodeElement, global::System.String>
		{
			private TypeOfPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadCodeElement.TypeOf domain property value handler.
			/// </summary>
			public static readonly TypeOfPropertyHandler Instance = new TypeOfPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadCodeElement.TypeOf domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TypeOfDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadCodeElement element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.typeOfPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadCodeElement element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.typeOfPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass BuildProject
	/// Description for Ultramarine.Generators.Language.BuildProject
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.BuildProject.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.BuildProject.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c485d0c8-53cb-4700-b9cd-c3df4a47eb15")]
	public partial class BuildProject : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// BuildProject domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc485d0c8, 0x53cb, 0x4700, 0xb9, 0xcd, 0xc3, 0xdf, 0x4a, 0x47, 0xeb, 0x15);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public BuildProject(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public BuildProject(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ProjectName domain property code
		
		/// <summary>
		/// ProjectName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProjectNameDomainPropertyId = new global::System.Guid(0x2c4ce0b6, 0xc357, 0x421c, 0xa0, 0x0d, 0xb0, 0xe3, 0xba, 0x8b, 0xec, 0x82);
		
		/// <summary>
		/// Storage for ProjectName
		/// </summary>
		private global::System.String projectNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ProjectName domain property.
		/// Name of the project to build
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.BuildProject/ProjectName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.BuildProject/ProjectName.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.BuildProject/ProjectName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2c4ce0b6-c357-421c-a00d-b0e3ba8bec82")]
		public global::System.String ProjectName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return projectNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProjectNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the BuildProject.ProjectName domain property.
		/// </summary>
		internal sealed partial class ProjectNamePropertyHandler : DslModeling::DomainPropertyValueHandler<BuildProject, global::System.String>
		{
			private ProjectNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the BuildProject.ProjectName domain property value handler.
			/// </summary>
			public static readonly ProjectNamePropertyHandler Instance = new ProjectNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the BuildProject.ProjectName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProjectNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(BuildProject element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.projectNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(BuildProject element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.projectNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Configuration domain property code
		
		/// <summary>
		/// Configuration domain property Id.
		/// </summary>
		public static readonly global::System.Guid ConfigurationDomainPropertyId = new global::System.Guid(0x6ea6184d, 0xc953, 0x4035, 0xae, 0x6b, 0x27, 0xf1, 0x4e, 0x52, 0x43, 0x14);
		
		/// <summary>
		/// Storage for Configuration
		/// </summary>
		private global::System.String configurationPropertyStorage = "Debug";
		
		/// <summary>
		/// Gets or sets the value of Configuration domain property.
		/// Project configuration to build
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.BuildProject/Configuration.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.BuildProject/Configuration.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.BuildProject/Configuration.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("Debug")]
		[DslModeling::DomainObjectId("6ea6184d-c953-4035-ae6b-27f14e524314")]
		public global::System.String Configuration
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return configurationPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ConfigurationPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the BuildProject.Configuration domain property.
		/// </summary>
		internal sealed partial class ConfigurationPropertyHandler : DslModeling::DomainPropertyValueHandler<BuildProject, global::System.String>
		{
			private ConfigurationPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the BuildProject.Configuration domain property value handler.
			/// </summary>
			public static readonly ConfigurationPropertyHandler Instance = new ConfigurationPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the BuildProject.Configuration domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ConfigurationDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(BuildProject element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.configurationPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(BuildProject element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.configurationPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass CreateFolder
	/// Description for Ultramarine.Generators.Language.CreateFolder
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateFolder.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateFolder.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("40bc53f4-bbd4-477a-9afe-d9c3e3ca8e63")]
	public partial class CreateFolder : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CreateFolder domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x40bc53f4, 0xbbd4, 0x477a, 0x9a, 0xfe, 0xd9, 0xc3, 0xe3, 0xca, 0x8e, 0x63);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CreateFolder(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CreateFolder(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region FolderPath domain property code
		
		/// <summary>
		/// FolderPath domain property Id.
		/// </summary>
		public static readonly global::System.Guid FolderPathDomainPropertyId = new global::System.Guid(0x0bd209e8, 0xd065, 0x4beb, 0xa7, 0x85, 0xb4, 0xb4, 0x3e, 0xa4, 0x22, 0x3a);
		
		/// <summary>
		/// Storage for FolderPath
		/// </summary>
		private global::System.String folderPathPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of FolderPath domain property.
		/// Description for Ultramarine.Generators.Language.CreateFolder.Folder Path
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateFolder/FolderPath.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateFolder/FolderPath.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateFolder/FolderPath.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0bd209e8-d065-4beb-a785-b4b43ea4223a")]
		public global::System.String FolderPath
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return folderPathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FolderPathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateFolder.FolderPath domain property.
		/// </summary>
		internal sealed partial class FolderPathPropertyHandler : DslModeling::DomainPropertyValueHandler<CreateFolder, global::System.String>
		{
			private FolderPathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateFolder.FolderPath domain property value handler.
			/// </summary>
			public static readonly FolderPathPropertyHandler Instance = new FolderPathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateFolder.FolderPath domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FolderPathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CreateFolder element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.folderPathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateFolder element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.folderPathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region BasePath domain property code
		
		/// <summary>
		/// BasePath domain property Id.
		/// </summary>
		public static readonly global::System.Guid BasePathDomainPropertyId = new global::System.Guid(0x360efd74, 0xa299, 0x49c0, 0x88, 0xf4, 0xf0, 0x1f, 0x34, 0x5b, 0x23, 0x87);
		
		/// <summary>
		/// Storage for BasePath
		/// </summary>
		private global::System.String basePathPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of BasePath domain property.
		/// Description for Ultramarine.Generators.Language.CreateFolder.Base Path
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateFolder/BasePath.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateFolder/BasePath.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateFolder/BasePath.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("360efd74-a299-49c0-88f4-f01f345b2387")]
		public global::System.String BasePath
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return basePathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				BasePathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateFolder.BasePath domain property.
		/// </summary>
		internal sealed partial class BasePathPropertyHandler : DslModeling::DomainPropertyValueHandler<CreateFolder, global::System.String>
		{
			private BasePathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateFolder.BasePath domain property value handler.
			/// </summary>
			public static readonly BasePathPropertyHandler Instance = new BasePathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateFolder.BasePath domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return BasePathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CreateFolder element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.basePathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateFolder element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.basePathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass CreateProjectItem
	/// Description for Ultramarine.Generators.Language.CreateProjectItem
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateProjectItem.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateProjectItem.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("82ab47c8-1755-4e0d-b939-2f5aa4eb8e33")]
	public partial class CreateProjectItem : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// CreateProjectItem domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x82ab47c8, 0x1755, 0x4e0d, 0xb9, 0x39, 0x2f, 0x5a, 0xa4, 0xeb, 0x8e, 0x33);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CreateProjectItem(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public CreateProjectItem(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ItemName domain property code
		
		/// <summary>
		/// ItemName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ItemNameDomainPropertyId = new global::System.Guid(0x739ebe60, 0x22b8, 0x4209, 0x81, 0x9b, 0x93, 0x7a, 0xf6, 0xc3, 0x27, 0x4a);
		
		/// <summary>
		/// Storage for ItemName
		/// </summary>
		private global::System.String itemNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ItemName domain property.
		/// Description for Ultramarine.Generators.Language.CreateProjectItem.Item Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateProjectItem/ItemName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateProjectItem/ItemName.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateProjectItem/ItemName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("739ebe60-22b8-4209-819b-937af6c3274a")]
		public global::System.String ItemName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return itemNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ItemNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateProjectItem.ItemName domain property.
		/// </summary>
		internal sealed partial class ItemNamePropertyHandler : DslModeling::DomainPropertyValueHandler<CreateProjectItem, global::System.String>
		{
			private ItemNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateProjectItem.ItemName domain property value handler.
			/// </summary>
			public static readonly ItemNamePropertyHandler Instance = new ItemNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateProjectItem.ItemName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ItemNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CreateProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.itemNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.itemNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region FolderPath domain property code
		
		/// <summary>
		/// FolderPath domain property Id.
		/// </summary>
		public static readonly global::System.Guid FolderPathDomainPropertyId = new global::System.Guid(0x38d4fe11, 0x243a, 0x4767, 0xa3, 0x7c, 0xde, 0xc0, 0x47, 0xd5, 0x51, 0x5b);
		
		/// <summary>
		/// Storage for FolderPath
		/// </summary>
		private global::System.String folderPathPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of FolderPath domain property.
		/// Description for Ultramarine.Generators.Language.CreateProjectItem.Folder Path
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateProjectItem/FolderPath.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateProjectItem/FolderPath.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateProjectItem/FolderPath.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("38d4fe11-243a-4767-a37c-dec047d5515b")]
		public global::System.String FolderPath
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return folderPathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FolderPathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateProjectItem.FolderPath domain property.
		/// </summary>
		internal sealed partial class FolderPathPropertyHandler : DslModeling::DomainPropertyValueHandler<CreateProjectItem, global::System.String>
		{
			private FolderPathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateProjectItem.FolderPath domain property value handler.
			/// </summary>
			public static readonly FolderPathPropertyHandler Instance = new FolderPathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateProjectItem.FolderPath domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FolderPathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CreateProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.folderPathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.folderPathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region LinkedWith domain property code
		
		/// <summary>
		/// LinkedWith domain property Id.
		/// </summary>
		public static readonly global::System.Guid LinkedWithDomainPropertyId = new global::System.Guid(0xa814346f, 0x0fb9, 0x465e, 0xb6, 0xff, 0xe3, 0xd5, 0xdf, 0x39, 0xa9, 0xb3);
		
		/// <summary>
		/// Storage for LinkedWith
		/// </summary>
		private global::System.String linkedWithPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of LinkedWith domain property.
		/// Description for Ultramarine.Generators.Language.CreateProjectItem.Linked With
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateProjectItem/LinkedWith.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateProjectItem/LinkedWith.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateProjectItem/LinkedWith.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("a814346f-0fb9-465e-b6ff-e3d5df39a9b3")]
		public global::System.String LinkedWith
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return linkedWithPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LinkedWithPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateProjectItem.LinkedWith domain property.
		/// </summary>
		internal sealed partial class LinkedWithPropertyHandler : DslModeling::DomainPropertyValueHandler<CreateProjectItem, global::System.String>
		{
			private LinkedWithPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateProjectItem.LinkedWith domain property value handler.
			/// </summary>
			public static readonly LinkedWithPropertyHandler Instance = new LinkedWithPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateProjectItem.LinkedWith domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LinkedWithDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CreateProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.linkedWithPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.linkedWithPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ProjectName domain property code
		
		/// <summary>
		/// ProjectName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProjectNameDomainPropertyId = new global::System.Guid(0xaf1ceb4a, 0xec36, 0x437c, 0xb8, 0x10, 0x8f, 0xb3, 0x1e, 0x5e, 0x37, 0x4b);
		
		/// <summary>
		/// Storage for ProjectName
		/// </summary>
		private global::System.String projectNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ProjectName domain property.
		/// Description for Ultramarine.Generators.Language.CreateProjectItem.Project Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateProjectItem/ProjectName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateProjectItem/ProjectName.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateProjectItem/ProjectName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("af1ceb4a-ec36-437c-b810-8fb31e5e374b")]
		public global::System.String ProjectName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return projectNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProjectNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateProjectItem.ProjectName domain property.
		/// </summary>
		internal sealed partial class ProjectNamePropertyHandler : DslModeling::DomainPropertyValueHandler<CreateProjectItem, global::System.String>
		{
			private ProjectNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateProjectItem.ProjectName domain property value handler.
			/// </summary>
			public static readonly ProjectNamePropertyHandler Instance = new ProjectNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateProjectItem.ProjectName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProjectNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(CreateProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.projectNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.projectNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Overwrite domain property code
		
		/// <summary>
		/// Overwrite domain property Id.
		/// </summary>
		public static readonly global::System.Guid OverwriteDomainPropertyId = new global::System.Guid(0x7bcd5863, 0x138d, 0x4692, 0xba, 0x1a, 0x09, 0xb6, 0xdd, 0xa2, 0x62, 0x85);
		
		/// <summary>
		/// Storage for Overwrite
		/// </summary>
		private global::System.Boolean overwritePropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Overwrite domain property.
		/// Description for Ultramarine.Generators.Language.CreateProjectItem.Overwrite
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.CreateProjectItem/Overwrite.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::CategoryResource("Ultramarine.Generators.Language.CreateProjectItem/Overwrite.Category", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.CreateProjectItem/Overwrite.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7bcd5863-138d-4692-ba1a-09b6dda26285")]
		public global::System.Boolean Overwrite
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return overwritePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				OverwritePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the CreateProjectItem.Overwrite domain property.
		/// </summary>
		internal sealed partial class OverwritePropertyHandler : DslModeling::DomainPropertyValueHandler<CreateProjectItem, global::System.Boolean>
		{
			private OverwritePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the CreateProjectItem.Overwrite domain property value handler.
			/// </summary>
			public static readonly OverwritePropertyHandler Instance = new OverwritePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the CreateProjectItem.Overwrite domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return OverwriteDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(CreateProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.overwritePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(CreateProjectItem element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.overwritePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass LoadProjectItem
	/// Description for Ultramarine.Generators.Language.LoadProjectItem
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadProjectItem.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadProjectItem.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("feaf6d65-bedd-4b04-91c5-d0226176c21a")]
	public partial class LoadProjectItem : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// LoadProjectItem domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xfeaf6d65, 0xbedd, 0x4b04, 0x91, 0xc5, 0xd0, 0x22, 0x61, 0x76, 0xc2, 0x1a);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public LoadProjectItem(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public LoadProjectItem(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region ProjectName domain property code
		
		/// <summary>
		/// ProjectName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProjectNameDomainPropertyId = new global::System.Guid(0xd2100451, 0x3c56, 0x434a, 0x8c, 0x7f, 0xb6, 0x93, 0x5b, 0x11, 0xc6, 0x5a);
		
		/// <summary>
		/// Storage for ProjectName
		/// </summary>
		private global::System.String projectNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ProjectName domain property.
		/// Description for Ultramarine.Generators.Language.LoadProjectItem.Project Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadProjectItem/ProjectName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadProjectItem/ProjectName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d2100451-3c56-434a-8c7f-b6935b11c65a")]
		public global::System.String ProjectName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return projectNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProjectNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadProjectItem.ProjectName domain property.
		/// </summary>
		internal sealed partial class ProjectNamePropertyHandler : DslModeling::DomainPropertyValueHandler<LoadProjectItem, global::System.String>
		{
			private ProjectNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadProjectItem.ProjectName domain property value handler.
			/// </summary>
			public static readonly ProjectNamePropertyHandler Instance = new ProjectNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadProjectItem.ProjectName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProjectNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.projectNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.projectNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ItemName domain property code
		
		/// <summary>
		/// ItemName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ItemNameDomainPropertyId = new global::System.Guid(0x6b3c9a64, 0xadab, 0x4d9f, 0xbe, 0x52, 0x3e, 0x27, 0xa3, 0x19, 0x48, 0x52);
		
		/// <summary>
		/// Storage for ItemName
		/// </summary>
		private global::System.String itemNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ItemName domain property.
		/// Description for Ultramarine.Generators.Language.LoadProjectItem.Item Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadProjectItem/ItemName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadProjectItem/ItemName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6b3c9a64-adab-4d9f-be52-3e27a3194852")]
		public global::System.String ItemName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return itemNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ItemNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadProjectItem.ItemName domain property.
		/// </summary>
		internal sealed partial class ItemNamePropertyHandler : DslModeling::DomainPropertyValueHandler<LoadProjectItem, global::System.String>
		{
			private ItemNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadProjectItem.ItemName domain property value handler.
			/// </summary>
			public static readonly ItemNamePropertyHandler Instance = new ItemNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadProjectItem.ItemName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ItemNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.itemNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.itemNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region LinkedWith domain property code
		
		/// <summary>
		/// LinkedWith domain property Id.
		/// </summary>
		public static readonly global::System.Guid LinkedWithDomainPropertyId = new global::System.Guid(0xd82e00ed, 0xcdd4, 0x4d86, 0x8d, 0x4b, 0x34, 0x0f, 0x79, 0x44, 0xfb, 0x46);
		
		/// <summary>
		/// Storage for LinkedWith
		/// </summary>
		private global::System.String linkedWithPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of LinkedWith domain property.
		/// Description for Ultramarine.Generators.Language.LoadProjectItem.Linked With
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.LoadProjectItem/LinkedWith.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.LoadProjectItem/LinkedWith.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d82e00ed-cdd4-4d86-8d4b-340f7944fb46")]
		public global::System.String LinkedWith
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return linkedWithPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				LinkedWithPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the LoadProjectItem.LinkedWith domain property.
		/// </summary>
		internal sealed partial class LinkedWithPropertyHandler : DslModeling::DomainPropertyValueHandler<LoadProjectItem, global::System.String>
		{
			private LinkedWithPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the LoadProjectItem.LinkedWith domain property value handler.
			/// </summary>
			public static readonly LinkedWithPropertyHandler Instance = new LinkedWithPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the LoadProjectItem.LinkedWith domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return LinkedWithDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(LoadProjectItem element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.linkedWithPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(LoadProjectItem element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.linkedWithPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass ReadProperty
	/// Description for Ultramarine.Generators.Language.ReadProperty
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.ReadProperty.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.ReadProperty.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("2a2726ef-e0e8-4b0d-a8f2-37d2f7d03b4c")]
	public partial class ReadProperty : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ReadProperty domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2a2726ef, 0xe0e8, 0x4b0d, 0xa8, 0xf2, 0x37, 0xd2, 0xf7, 0xd0, 0x3b, 0x4c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReadProperty(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ReadProperty(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region PropertyName domain property code
		
		/// <summary>
		/// PropertyName domain property Id.
		/// </summary>
		public static readonly global::System.Guid PropertyNameDomainPropertyId = new global::System.Guid(0x47796921, 0xbf6b, 0x49db, 0x8e, 0x5c, 0x24, 0x8c, 0x34, 0x08, 0xe0, 0xf4);
		
		/// <summary>
		/// Storage for PropertyName
		/// </summary>
		private global::System.String propertyNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of PropertyName domain property.
		/// Description for Ultramarine.Generators.Language.ReadProperty.Property Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.ReadProperty/PropertyName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.ReadProperty/PropertyName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("47796921-bf6b-49db-8e5c-248c3408e0f4")]
		public global::System.String PropertyName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return propertyNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PropertyNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the ReadProperty.PropertyName domain property.
		/// </summary>
		internal sealed partial class PropertyNamePropertyHandler : DslModeling::DomainPropertyValueHandler<ReadProperty, global::System.String>
		{
			private PropertyNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ReadProperty.PropertyName domain property value handler.
			/// </summary>
			public static readonly PropertyNamePropertyHandler Instance = new PropertyNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ReadProperty.PropertyName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PropertyNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ReadProperty element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.propertyNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(ReadProperty element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.propertyNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass SetVariable
	/// Description for Ultramarine.Generators.Language.SetVariable
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.SetVariable.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.SetVariable.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("9e35266d-2d6f-4d1c-9ea2-40677ffdaee1")]
	public partial class SetVariable : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// SetVariable domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9e35266d, 0x2d6f, 0x4d1c, 0x9e, 0xa2, 0x40, 0x67, 0x7f, 0xfd, 0xae, 0xe1);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SetVariable(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public SetVariable(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region VariableName domain property code
		
		/// <summary>
		/// VariableName domain property Id.
		/// </summary>
		public static readonly global::System.Guid VariableNameDomainPropertyId = new global::System.Guid(0x9f4ba5ed, 0x94b9, 0x460c, 0xa9, 0x12, 0xba, 0x76, 0x42, 0xb0, 0xdb, 0x2e);
		
		/// <summary>
		/// Storage for VariableName
		/// </summary>
		private global::System.String variableNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of VariableName domain property.
		/// Description for Ultramarine.Generators.Language.SetVariable.Variable Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.SetVariable/VariableName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.SetVariable/VariableName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9f4ba5ed-94b9-460c-a912-ba7642b0db2e")]
		public global::System.String VariableName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return variableNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				VariableNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SetVariable.VariableName domain property.
		/// </summary>
		internal sealed partial class VariableNamePropertyHandler : DslModeling::DomainPropertyValueHandler<SetVariable, global::System.String>
		{
			private VariableNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SetVariable.VariableName domain property value handler.
			/// </summary>
			public static readonly VariableNamePropertyHandler Instance = new VariableNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SetVariable.VariableName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return VariableNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SetVariable element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.variableNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SetVariable element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.variableNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region VariableValue domain property code
		
		/// <summary>
		/// VariableValue domain property Id.
		/// </summary>
		public static readonly global::System.Guid VariableValueDomainPropertyId = new global::System.Guid(0x509a5ec0, 0x99b0, 0x48f9, 0xa9, 0xb0, 0x2c, 0xba, 0x1d, 0xc3, 0x78, 0x55);
		
		/// <summary>
		/// Storage for VariableValue
		/// </summary>
		private global::System.String variableValuePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of VariableValue domain property.
		/// Description for Ultramarine.Generators.Language.SetVariable.Variable Value
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.SetVariable/VariableValue.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.SetVariable/VariableValue.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("509a5ec0-99b0-48f9-a9b0-2cba1dc37855")]
		public global::System.String VariableValue
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return variableValuePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				VariableValuePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SetVariable.VariableValue domain property.
		/// </summary>
		internal sealed partial class VariableValuePropertyHandler : DslModeling::DomainPropertyValueHandler<SetVariable, global::System.String>
		{
			private VariableValuePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SetVariable.VariableValue domain property value handler.
			/// </summary>
			public static readonly VariableValuePropertyHandler Instance = new VariableValuePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SetVariable.VariableValue domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return VariableValueDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SetVariable element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.variableValuePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SetVariable element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.variableValuePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ParentTask domain property code
		
		/// <summary>
		/// ParentTask domain property Id.
		/// </summary>
		public static readonly global::System.Guid ParentTaskDomainPropertyId = new global::System.Guid(0x9417475f, 0x713c, 0x4983, 0xa4, 0x81, 0xaf, 0x96, 0xeb, 0xf0, 0xe1, 0x23);
		
		/// <summary>
		/// Storage for ParentTask
		/// </summary>
		private global::System.String parentTaskPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ParentTask domain property.
		/// Description for Ultramarine.Generators.Language.SetVariable.Parent Task
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.SetVariable/ParentTask.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.SetVariable/ParentTask.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("9417475f-713c-4983-a481-af96ebf0e123")]
		public global::System.String ParentTask
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return parentTaskPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ParentTaskPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the SetVariable.ParentTask domain property.
		/// </summary>
		internal sealed partial class ParentTaskPropertyHandler : DslModeling::DomainPropertyValueHandler<SetVariable, global::System.String>
		{
			private ParentTaskPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the SetVariable.ParentTask domain property value handler.
			/// </summary>
			public static readonly ParentTaskPropertyHandler Instance = new ParentTaskPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the SetVariable.ParentTask domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ParentTaskDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(SetVariable element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.parentTaskPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(SetVariable element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.parentTaskPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass TextTransformation
	/// Description for Ultramarine.Generators.Language.TextTransformation
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.TextTransformation.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.TextTransformation.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("cf3a6e86-268d-4c5d-85e5-54f790a850c5")]
	public partial class TextTransformation : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TextTransformation domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xcf3a6e86, 0x268d, 0x4c5d, 0x85, 0xe5, 0x54, 0xf7, 0x90, 0xa8, 0x50, 0xc5);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TextTransformation(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TextTransformation(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region FileName domain property code
		
		/// <summary>
		/// FileName domain property Id.
		/// </summary>
		public static readonly global::System.Guid FileNameDomainPropertyId = new global::System.Guid(0x0ec6bd04, 0x5eab, 0x4522, 0x98, 0x88, 0xe6, 0x8d, 0xef, 0x81, 0x17, 0x53);
		
		/// <summary>
		/// Storage for FileName
		/// </summary>
		private global::System.String fileNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of FileName domain property.
		/// Description for Ultramarine.Generators.Language.TextTransformation.File Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.TextTransformation/FileName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.TextTransformation/FileName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("0ec6bd04-5eab-4522-9888-e68def811753")]
		public global::System.String FileName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return fileNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FileNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TextTransformation.FileName domain property.
		/// </summary>
		internal sealed partial class FileNamePropertyHandler : DslModeling::DomainPropertyValueHandler<TextTransformation, global::System.String>
		{
			private FileNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TextTransformation.FileName domain property value handler.
			/// </summary>
			public static readonly FileNamePropertyHandler Instance = new FileNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TextTransformation.FileName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FileNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TextTransformation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.fileNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TextTransformation element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.fileNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ProjectName domain property code
		
		/// <summary>
		/// ProjectName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProjectNameDomainPropertyId = new global::System.Guid(0x62ae3e3d, 0xad13, 0x4bee, 0x91, 0xd7, 0xa5, 0xd4, 0x19, 0x1e, 0xde, 0x17);
		
		/// <summary>
		/// Storage for ProjectName
		/// </summary>
		private global::System.String projectNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ProjectName domain property.
		/// Description for Ultramarine.Generators.Language.TextTransformation.Project Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.TextTransformation/ProjectName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.TextTransformation/ProjectName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("62ae3e3d-ad13-4bee-91d7-a5d4191ede17")]
		public global::System.String ProjectName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return projectNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProjectNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TextTransformation.ProjectName domain property.
		/// </summary>
		internal sealed partial class ProjectNamePropertyHandler : DslModeling::DomainPropertyValueHandler<TextTransformation, global::System.String>
		{
			private ProjectNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TextTransformation.ProjectName domain property value handler.
			/// </summary>
			public static readonly ProjectNamePropertyHandler Instance = new ProjectNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TextTransformation.ProjectName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProjectNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TextTransformation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.projectNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TextTransformation element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.projectNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Parameters domain property code
		
		/// <summary>
		/// Parameters domain property Id.
		/// </summary>
		public static readonly global::System.Guid ParametersDomainPropertyId = new global::System.Guid(0x3fbda026, 0x81a0, 0x408e, 0xbb, 0x53, 0x4f, 0xc0, 0x2d, 0x25, 0x73, 0x17);
		
		/// <summary>
		/// Storage for Parameters
		/// </summary>
		private global::System.String parametersPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Parameters domain property.
		/// Description for Ultramarine.Generators.Language.TextTransformation.Parameters
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.TextTransformation/Parameters.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.TextTransformation/Parameters.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("3fbda026-81a0-408e-bb53-4fc02d257317")]
		public global::System.String Parameters
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return parametersPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ParametersPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TextTransformation.Parameters domain property.
		/// </summary>
		internal sealed partial class ParametersPropertyHandler : DslModeling::DomainPropertyValueHandler<TextTransformation, global::System.String>
		{
			private ParametersPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TextTransformation.Parameters domain property value handler.
			/// </summary>
			public static readonly ParametersPropertyHandler Instance = new ParametersPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TextTransformation.Parameters domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ParametersDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TextTransformation element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.parametersPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TextTransformation element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.parametersPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass Iterator
	/// Description for Ultramarine.Generators.Language.Iterator
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Iterator.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Iterator.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("0f981f24-ba7b-496f-aa88-c64c5c8c9a90")]
	public partial class Iterator : CompositeTask
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Iterator domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0f981f24, 0xba7b, 0x496f, 0xaa, 0x88, 0xc6, 0x4c, 0x5c, 0x8c, 0x9a, 0x90);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Iterator(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Iterator(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace Ultramarine.Generators.Language
{
	/// <summary>
	/// DomainClass Importer
	/// Description for Ultramarine.Generators.Language.Importer
	/// </summary>
	[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Importer.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Importer.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7e22cf59-997d-4e4e-bc8c-0db74bfb4081")]
	public partial class Importer : Task
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Importer domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7e22cf59, 0x997d, 0x4e4e, 0xbc, 0x8c, 0x0d, 0xb7, 0x4b, 0xfb, 0x40, 0x81);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Importer(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Importer(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Path domain property code
		
		/// <summary>
		/// Path domain property Id.
		/// </summary>
		public static readonly global::System.Guid PathDomainPropertyId = new global::System.Guid(0x7115bc07, 0x5693, 0x42ee, 0xab, 0xc5, 0x0f, 0x73, 0xca, 0x66, 0x4f, 0x6c);
		
		/// <summary>
		/// Storage for Path
		/// </summary>
		private global::System.String pathPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Path domain property.
		/// Description for Ultramarine.Generators.Language.Importer.Path
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Importer/Path.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Importer/Path.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("7115bc07-5693-42ee-abc5-0f73ca664f6c")]
		public global::System.String Path
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return pathPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				PathPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Importer.Path domain property.
		/// </summary>
		internal sealed partial class PathPropertyHandler : DslModeling::DomainPropertyValueHandler<Importer, global::System.String>
		{
			private PathPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Importer.Path domain property value handler.
			/// </summary>
			public static readonly PathPropertyHandler Instance = new PathPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Importer.Path domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return PathDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Importer element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.pathPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Importer element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.pathPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ProjectName domain property code
		
		/// <summary>
		/// ProjectName domain property Id.
		/// </summary>
		public static readonly global::System.Guid ProjectNameDomainPropertyId = new global::System.Guid(0x29bb276f, 0x08d5, 0x476f, 0xaa, 0x20, 0x6d, 0x40, 0xaa, 0x37, 0x91, 0x6d);
		
		/// <summary>
		/// Storage for ProjectName
		/// </summary>
		private global::System.String projectNamePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ProjectName domain property.
		/// Description for Ultramarine.Generators.Language.Importer.Project Name
		/// </summary>
		[DslDesign::DisplayNameResource("Ultramarine.Generators.Language.Importer/ProjectName.DisplayName", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Ultramarine.Generators.Language.Importer/ProjectName.Description", typeof(global::Ultramarine.Generators.Language.GeneratorLanguageDomainModel), "Ultramarine.Generators.Language.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("29bb276f-08d5-476f-aa20-6d40aa37916d")]
		public global::System.String ProjectName
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return projectNamePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ProjectNamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Importer.ProjectName domain property.
		/// </summary>
		internal sealed partial class ProjectNamePropertyHandler : DslModeling::DomainPropertyValueHandler<Importer, global::System.String>
		{
			private ProjectNamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Importer.ProjectName domain property value handler.
			/// </summary>
			public static readonly ProjectNamePropertyHandler Instance = new ProjectNamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Importer.ProjectName domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ProjectNameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Importer element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.projectNamePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Importer element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.projectNamePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
